nelmio_api_doc:
    documentation:
        info:
            title: Suvepraktika
            description: Suvepraktika r√ºhm 2.
            version: 1.0.0
        paths:
            /api/register:
                post:
                    summary: "Register user"
                    requestBody:
                        content:
                            application/json:
                                example:
                                    {
                                        "username": "username",
                                        "password": "testpass"
                                    }
                        required: true
                    responses:
                        201:
                            description: "User registered successfully"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "User registered successfully",
                                                }
                        400:
                            description: "Missing/invalid credentials or passwords don't match"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Invalid credentials",
                                                }
                        406:
                            description: "Provided username already exists"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "User with inserted username already exists",
                                                }
                        500:
                            description: "Problem creating a hashed password"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Error hashing password",
                                                }
            /api/login:
                post:
                    summary: Login user
                    requestBody:
                        content:
                            application/json:
                                example:
                                    {
                                        "username": "username",
                                        "password": "testpass"
                                    }
                        required: true
                    responses:
                        200:
                            description: "User logged in successfully"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "username": "username",
                                                    "token": "35f8af7bbeeea3412512849364de597be817ac3e512f6f696309637eca65c1da"
                                                }
                        401:
                            description: "Provided credentials were invalid"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Invalid credentials",
                                                }
                        500:
                            description: "Problem generating a token"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Error generating token",
                                                }
            /api/logout:
                post:
                    summary: "Logout user"
                    requestBody:
                        content:
                            application/json:
                                example:
                                    {
                                        "userToken": "35f8af7bbeeea3412512849364de597be817ac3e512f6f696309637eca65c1da",
                                    }
                        required: true
                    responses:
                        200:
                            description: "User logged out successfully"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "User logged out successfully",
                                                }
                        400:
                            description: "Token couldn't be validated"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Sent token was invalid",
                                                }
            /api/verify:
                post:
                    summary: "Verify token sent by user"
                    requestBody:
                        content:
                            application/json:
                                example:
                                    {
                                        "userToken": "35f8af7bbeeea3412512849364de597be817ac3e512f6f696309637eca65c1da",
                                    }
                        required: true
                    responses:
                        200:
                            description: "Token authenticated successfully"
                            content:
                                application/json:
                                    examples:
                                        example:
                                            summary: main
                                            value:
                                                {
                                                    "data": "Token is authentic",
                                                    "isAdmin": false
                                                }
                        401:
                            description: "User not logged in on firewall or unauthentic token"
                            content:
                                text/html:
                                    examples:
                                        example1:
                                            summary: login
                                            value: "*Symfony generated exception page indicating the user need to login for access*"
                                application/json:
                                    examples:
                                        example2:
                                            summary: token
                                            value:
                                                {
                                                    "data": "Token not authentic",
                                                    "token": "35f8af7bbeeea3412512849364de597be817ac3e512f6f696309637eca65c1da"
                                                }
            /api/users:
                get:
                    summary: "Get all users"
                    responses:
                        200:
                            description: "Returns all users without passwords"
                        204:
                            description: "No users found from database"
                        default:
                            description: "Unexpected error"
            /api/user/{id}:
                get:
                    summary: "Find user by id"
                    responses:
                        200:
                            description: "Returns one user based on id"
                        204:
                            description: "user not found from database"
                        default:
                            description: "unexpected error"
            /api/user/{userName}/button-instances:
                get:
                    summary: "find buttons for a user"
                    responses:
                        200:
                            description: "Returns all buttons, and button template id-s for a single user"
                        204:
                            description: "user not found from database"
                        default:
                            description: "unexpected error"
            /api/user/{userName}/redux-span:
                get:
                    summary: "find redux span for a single user"
                    responses:
                        200:
                            description: "Returns reduxStateSpan json based on userName"
                        204:
                            description: "User not found"
                        default:
                            description: "unexpected error"
            /api/user/{userName}/redux-span/save:
                post:
                    summary: "add a new reduxSpan"
                    responses:
                        201:
                            description: "succesful POST query to reduxSpan"
                        400:
                            description: "missing arguments"
                        500:
                            description: "database error"
            /api/rooms:
                get:
                    summary: "Find all rooms"
                    responses:
                        200:
                            description: "Returns all rooms from the database"
                        204:
                            description: "No rooms found from database"
                        default:
                            description: "unexpected error"
            /api/room/{id}:
                get:
                    summary: "Find one room"
                    responses:
                        200:
                            description: "Returns one room based on id"
                        204:
                            description: "No room found based on this id"
                        default:
                            description: "unexpected error"
            /api/room/{id}/devices:
                get:
                    summary: "Find all devices in a single room"
                    responses:
                        200:
                            description: "Returns all devices in a single room, based on room id"
                        204:
                            description: "No room found from database"
                        default:
                            description: "unexpected error"
            /api/group-instances:
                get:
                    summary: "Find all group-instances"
                    responses:
                        200:
                            description: "Return all group instances"
                        204:
                            description: "No group instances found"
                        default:
                            description: "unexpected error"
            /api/group-instance/{id}:
                get:
                    summary: "Find one group instance"
                    responses:
                        200:
                            description: "Return one group instance based on group instance id"
                        204:
                            description: "No group instance found"
                        default:
                            description: "unexpected error"
            /api/button-groups:
                get:
                    summary: "Find all button groups"
                    responses:
                        200:
                            description: "Returns all button groups"
                        204:
                            description: "No button groups found"
                        default:
                            description: "unexpected error"
            /api/button-group/{id}:
                get:
                    summary: "Find a button-group by id"
                    responses:
                        200:
                            description: "Returns button-group based on button-group id"
                        204:
                            description: "No button group found"
                        default:
                            description: "unexpected error"
            /api/devices:
                get:
                    summary: "Find all devices"
                    responses:
                        200:
                            description: "Returns all devices from database"
                        204:
                            description: "No devices found"
                        default:
                            description: "unexpected error"
            /api/device/{id}:
                get:
                    summary: "Find one device by id"
                    responses:
                        200:
                            description: "Returns all devices based on device id"
                        204:
                            description: "No device found"
                        default:
                            description: "unexpected error"
            /api/button-templates:
                get:
                    summary: "Find all buttonTemplates"
                    responses:
                        200:
                            description: "Returns all button-templates from database"
                        204:
                            description: "No button templates found"
                        default:
                            description: "unexpected error"
            /api/button-template/{id}:
                get:
                    summary: "Find one button template"
                    responses:
                        200:
                            description: "Returns one button template based on button template id"
                        204:
                            description: "No button template found"
                        default:
                            description: "unexpected error"
            /api/button-template/save:
                post:
                    summary: "Create a new button template"
                    responses:
                        201:
                            description: "succesful POST query into button templates"
                        400:
                            description: "Missing arguments"
                        500:
                            description: "database error"
                        default:
                            description: "unexpected error"
            /api/button-instances:
                get:
                    summary: "Find all button-instances"
                    responses:
                        200:
                            description: "Returns all button-instances from database"
                        204:
                            description: "No button instances found"
                        default:
                            description: "unexpected error"
            /api/button-instance/{id}:
                get:
                    summary: "Find one button-instance"
                    responses:
                        200:
                            description: "Returns one button-instance based on button-instance id"
                        204:
                            description: "No button instance found"
                        default:
                            description: "unexpected error"
            /api/belongs:
                get:
                    summary: "Find all data stored in belongs table"
                    responses:
                        200:
                            description: "Returns all data from belongs table"
                        204:
                            description: "No data from belongs table found"
                        default:
                            description: "unexpected error"
            /api/belongs/{id}:
                get:
                    summary: "Find data from belongs table"
                    responses:
                        200:
                            description: "Returns one insertion from belongs table, based on belongs id"
                        204:
                            description: "No data from belongs table found"
                        default:
                            description: "unexpected error"



    areas: # to filter documented areas
        path_patterns:
            - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
